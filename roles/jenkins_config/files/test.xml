<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.5.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.5.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>0 6 * * 1</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.78">
    <script>pipeline {
  agent any
  stages {
    stage(&apos;Run Powershell&apos;){
      steps {
        script {
      withCredentials([usernamePassword(
        credentialsId: &apos;vsphere&apos;,
        usernameVariable: &apos;vsphereUser&apos;,
        passwordVariable: &apos;vspherePassword&apos;,
    )]){
     def output =   powershell (returnStdout: true, script:&quot;&quot;&quot;
                \$password = ConvertTo-SecureString “${vspherePassword}” -AsPlainText -Force
                \$credential = New-Object System.Management.Automation.PSCredential (&quot;${vsphereUser}&quot;, \$password)
                \$VCServers = @(&quot;phlpvcs0001.vertexinc.com&quot;)
                Foreach(\$vc in \$VCServers) {connect-viserver \$vc -Credential \$credential -WarningAction SilentlyContinue -Force | Out-Null} 
                \$vms = Get-VM | Get-Annotation -CustomAttribute &quot;Business Owner&quot; | Select-Object Value,AnnotatedEntity   | where {\$_.Value -like &quot;\$null&quot;} 
                Foreach(\$vm in \$vms) {
                     if(((Get-VM -Name \$vm.AnnotatedEntity.Name).ExtensionData.Config.createDate) -gt (Get-Date).adddays(-7)){
                     Write-Output \$vm.AnnotatedEntity.Name
                    }
                 }
                disconnect-viserver -Server &quot;phlpvcs0001.vertexinc.com&quot; -Confirm:\$false
             &quot;&quot;&quot;)
            
  
             
             echo &quot;Vms created this past week missing business owner: ${output}&quot;
             output = output.replaceAll(&quot;\n&quot;,&quot;&lt;br&gt;&quot;)
             
             writeFile file: &quot;output/newVms.html&quot;, text: &quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;h1&gt;&lt;p style=\&quot;color:blue;\&quot;&gt;VMs built in the past week missing Business Owner&lt;/p&gt;&lt;/h1&gt;&lt;br&gt;&lt;p&gt;${output}&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;
          publishHTML (target: [
      allowMissing: false,
      alwaysLinkToLastBuild: false,
      keepAll: true,
      reportDir: &apos;output&apos;,
      reportFiles: &apos;newVms.html&apos;,
      reportName: &quot;NewVMs&quot;
    ])
    
    emailext attachLog: false,
            body: &quot;&quot;&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;h1&gt;&lt;p style=\&quot;color:blue;\&quot;&gt;VMs built in the past week missing Business Owner&lt;/p&gt;&lt;/h1&gt;&lt;h2&gt;If any of these VMs belong to you, please update them in vSphere&lt;/h2&gt;&lt;br&gt;&lt;p&gt;${output}&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;&quot;&quot;,
            subject: &quot;VMs Missing Business Owners&quot;,
            //to: &quot;Arch.Moberly@vertexinc.com,Ashley.Porta@vertexinc.com,dennis.klavans@vertexinc.com,rich.dagusto@vertexinc.com,rob.schlank@vertexinc.com,robert.lendler@vertexinc.com,Russel.Abedin@vertexinc.com,Vijendra.Adhangle@vertexinc.com,vincent.drago@vertexinc.com&quot;
            to: &quot;${env.emailList}&quot;
        }
      }
    }
   }
  }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
